version: "3"

services:
  producer:
    build:
      dockerfile: Dockerfile
      context: ./metrics_producer
    depends_on:
      - kafka
    volumes:
      - ./metrics_producer:/code
      - ./settings/:/code/settings
      - ./ssl_files/:/code/ssl_files
    environment:
      - KAFKA_ADDR=kafka:9092
      - KAFKA_SECURITY_PROTOCOL=None
      - KAFKA_CAFILE=/code/ssl_files/aiven_ca.pem
      - KAFKA_CERTFILE=/code/ssl_files/aiven.crt
      - KAFKA_KEYFILE=/code/ssl_files/aiven.key
      - METRICS_TOPIC=SystemMetrics
      - METRICS_INTERVAL_MS=1000

  consumer:
    build:
      dockerfile: Dockerfile
      context: ./metrics_consumer
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./metrics_consumer:/code
      - ./settings/:/code/settings
      - ./ssl_files/:/code/ssl_files
    environment:
      - KAFKA_ADDR=kafka:9092
      - KAFKA_SECURITY_PROTOCOL=None
      - KAFKA_CAFILE=/code/ssl_files/aiven_ca.pem
      - KAFKA_CERTFILE=/code/ssl_files/aiven.crt
      - KAFKA_KEYFILE=/code/ssl_files/aiven.key
      - METRICS_TOPIC=SystemMetrics
      - METRICS_CONSUMER_ID=metrics-consumer-1
      - METRICS_GROUP_ID=metrics-group
      - POSTGRES_ADDR=postgresql+psycopg2://test:test@postgres:5432/metrics

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CREATE_TOPICS=SystemMetrics:1:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=kafka

  postgres:
    image: postgres:12.1
    environment:
      - POSTGRES_DB=metrics
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
